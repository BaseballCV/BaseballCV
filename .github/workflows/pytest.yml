name: BaseballCV Core Functionality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        component: [
          'functions', 
          'datasets',
          'model',
          'api',
          'utilities'
        ]
    name: Test ${{ matrix.component }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run tests (non-API)
      if: matrix.component != 'api'
      id: test_non_api
      run: |
        mkdir -p test-results
        # Use absolute path for coverage file and verify it exists
        pytest tests/test_${{ matrix.component }} -v --cov=baseballcv.${{ matrix.component }} --cov-report=xml:${{ github.workspace }}/coverage-${{ matrix.component }}.xml
        ls -la ${{ github.workspace }}/coverage-${{ matrix.component }}.xml || echo "Coverage file not generated"
      continue-on-error: false
        
    - name: Run API tests
      if: matrix.component == 'api'
      id: test_api
      run: |
        mkdir -p test-results
        pytest tests/test_api -v
      continue-on-error: false
      
    - name: Determine test status
      if: always()
      id: status
      run: |
        if [[ "${{ matrix.component }}" != "api" && "${{ steps.test_non_api.outcome }}" == "success" ]] || [[ "${{ matrix.component }}" == "api" && "${{ steps.test_api.outcome }}" == "success" ]]; then
          echo "result=success" >> $GITHUB_OUTPUT
        else
          echo "result=failure" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload coverage to Codecov
      if: matrix.component != 'api' && steps.test_non_api.outcome == 'success'
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ${{ github.workspace }}/coverage-${{ matrix.component }}.xml
        flags: ${{ matrix.component }}
        name: ${{ matrix.component }}-coverage
        fail_ci_if_error: false